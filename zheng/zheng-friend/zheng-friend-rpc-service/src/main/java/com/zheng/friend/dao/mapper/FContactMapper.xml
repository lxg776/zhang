<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zheng.friend.dao.mapper.FContactMapper">
  <resultMap id="BaseResultMap" type="com.zheng.friend.dao.model.FContact">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="f_user_id" jdbcType="INTEGER" property="fUserId" />
    <result column="t_user_id" jdbcType="INTEGER" property="tUserId" />
    <result column="contact_count" jdbcType="INTEGER" property="contactCount" />
    <result column="both_status" jdbcType="TINYINT" property="bothStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.zheng.friend.dao.model.FContact">
    <result column="remarks" jdbcType="LONGVARCHAR" property="remarks" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, f_user_id, t_user_id, contact_count, both_status, create_time
  </sql>
  <sql id="Blob_Column_List">
    remarks
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.zheng.friend.dao.model.FContactExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from f_contact
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.zheng.friend.dao.model.FContactExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from f_contact
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from f_contact
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from f_contact
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zheng.friend.dao.model.FContactExample">
    delete from f_contact
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zheng.friend.dao.model.FContact">
    insert into f_contact (id, f_user_id, t_user_id, 
      contact_count, both_status, create_time, 
      remarks)
    values (#{id,jdbcType=INTEGER}, #{fUserId,jdbcType=INTEGER}, #{tUserId,jdbcType=INTEGER}, 
      #{contactCount,jdbcType=INTEGER}, #{bothStatus,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{remarks,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zheng.friend.dao.model.FContact">
    insert into f_contact
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fUserId != null">
        f_user_id,
      </if>
      <if test="tUserId != null">
        t_user_id,
      </if>
      <if test="contactCount != null">
        contact_count,
      </if>
      <if test="bothStatus != null">
        both_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fUserId != null">
        #{fUserId,jdbcType=INTEGER},
      </if>
      <if test="tUserId != null">
        #{tUserId,jdbcType=INTEGER},
      </if>
      <if test="contactCount != null">
        #{contactCount,jdbcType=INTEGER},
      </if>
      <if test="bothStatus != null">
        #{bothStatus,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zheng.friend.dao.model.FContactExample" resultType="java.lang.Long">
    select count(*) from f_contact
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update f_contact
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.fUserId != null">
        f_user_id = #{record.fUserId,jdbcType=INTEGER},
      </if>
      <if test="record.tUserId != null">
        t_user_id = #{record.tUserId,jdbcType=INTEGER},
      </if>
      <if test="record.contactCount != null">
        contact_count = #{record.contactCount,jdbcType=INTEGER},
      </if>
      <if test="record.bothStatus != null">
        both_status = #{record.bothStatus,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update f_contact
    set id = #{record.id,jdbcType=INTEGER},
      f_user_id = #{record.fUserId,jdbcType=INTEGER},
      t_user_id = #{record.tUserId,jdbcType=INTEGER},
      contact_count = #{record.contactCount,jdbcType=INTEGER},
      both_status = #{record.bothStatus,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      remarks = #{record.remarks,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update f_contact
    set id = #{record.id,jdbcType=INTEGER},
      f_user_id = #{record.fUserId,jdbcType=INTEGER},
      t_user_id = #{record.tUserId,jdbcType=INTEGER},
      contact_count = #{record.contactCount,jdbcType=INTEGER},
      both_status = #{record.bothStatus,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zheng.friend.dao.model.FContact">
    update f_contact
    <set>
      <if test="fUserId != null">
        f_user_id = #{fUserId,jdbcType=INTEGER},
      </if>
      <if test="tUserId != null">
        t_user_id = #{tUserId,jdbcType=INTEGER},
      </if>
      <if test="contactCount != null">
        contact_count = #{contactCount,jdbcType=INTEGER},
      </if>
      <if test="bothStatus != null">
        both_status = #{bothStatus,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zheng.friend.dao.model.FContact">
    update f_contact
    set f_user_id = #{fUserId,jdbcType=INTEGER},
      t_user_id = #{tUserId,jdbcType=INTEGER},
      contact_count = #{contactCount,jdbcType=INTEGER},
      both_status = #{bothStatus,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zheng.friend.dao.model.FContact">
    update f_contact
    set f_user_id = #{fUserId,jdbcType=INTEGER},
      t_user_id = #{tUserId,jdbcType=INTEGER},
      contact_count = #{contactCount,jdbcType=INTEGER},
      both_status = #{bothStatus,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <cache type="org.mybatis.caches.ehcache.LoggingEhcache" />
</mapper>